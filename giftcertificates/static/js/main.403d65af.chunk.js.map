{"version":3,"sources":["utils/getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","this","App","state","is_paused","is_shop","decimals","stbl_total_supply","stble_my_supply","gft_stbl_balance","gft_total_supply","gft_my_supply","gft_contract_owner","current_network","current_account","accounts","stbl_contract","gft_contract","componentDidMount","id","network","network_name","StblContract","stbl_instance","GftContract","gft_instance","sent","version","eth","getAccounts","utils","selectedAddress","t1","toChecksumAddress","call","net","getId","undefined","1","2","3","4","42","truffleContract","StableTokenContract","setProvider","currentProvider","deployed","toNumber","GiftCertificateContract","owner","paused","_this","setState","setEventMonitors","updateState","t2","alert","changeAccount","_callee2","new_account","_context2","changeNetwork","_callee3","new_net","new_decimals","_context3","networkVersion","_callee4","_context4","on","_callee5","_this$state","BN","d","new_stbl_total_supply","new_stble_my_supply","new_gft_total_supply","new_gft_my_supply","new_gft_stbl_balance","new_is_paused","new_is_shop","_context5","pow","totalSupply","div","balanceOf","address","isShop","get_stbl","_callee6","event","_this$state2","n","_context6","preventDefault","refs","stbl_amount","value","mul","mint","from","fund_gft","_callee7","_this$state3","tx","_context7","fund_amount","approve","fund","refund_gft","_callee8","_this$state4","_context8","refund","get_gft","_callee9","_this$state5","_context9","gft_stbl_amount","issue","send_gft","_callee10","_this$state6","ID","_context10","shop_address","tokenByIndex","tokenOfOwnerByIndex","safeTransferFrom","redeem_gft","_callee11","_this$state7","_context11","redeemPaused","redeem","pause","_callee12","_this$state8","_context12","add_shop","_callee13","_this$state9","_context13","shop_address_add","addShop","renounce_shop","_callee14","_this$state10","_context14","renounceShop","react_default","createElement","className","onSubmit","type","name","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.403d65af.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport StableTokenContract from \"./contracts/StableToken.json\";\nimport GiftCertificateContract from \"./contracts/GiftCertificate.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { web3: null, is_paused: false, is_shop: false, decimals: 18, stbl_total_supply: 0, stble_my_supply: 0, gft_stbl_balance: 0, gft_total_supply: 0, gft_my_supply: 0, gft_contract_owner: null, current_network: \"\", current_account: null, accounts: null, stbl_contract: null, gft_contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      console.log(web3.version);\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      //Get the current account\n      var current_account = null;\n      var id = 0;\n      if (window.ethereum) {\n        //Metamask specific property\n        //selectedAddress returns all lower case address, while accounts[0] and owner() return mixed case .\n        current_account = web3.utils.toChecksumAddress(await window.ethereum.selectedAddress);\n        //id = await window.ethereum.networkVersion;\n        id =  await web3.eth.net.getId();\n      } else {\n        current_account = web3.utils.toChecksumAddress(accounts[0]);\n        id =  await web3.eth.net.getId();\n      }\n      const network = {'1': 'Main Net', '2': 'Morden', '3': 'Ropsten', '4': 'Rinkeby', '42': 'Kovan'}\n      let network_name;\n      if (network[id] !== undefined) {\n        network_name = network[id];\n      } else {\n        network_name = \"Custom network, id: \" + id;\n      }\n\n      // Get the STBL contract instance.\n      const StblContract = truffleContract(StableTokenContract);\n      StblContract.setProvider(web3.currentProvider);\n      const stbl_instance = await StblContract.deployed();\n      const decimals = (await stbl_instance.decimals()).toNumber()\n\n\n      // Get the GFT contract instance.\n      const GftContract = truffleContract(GiftCertificateContract);\n      GftContract.setProvider(web3.currentProvider);\n      const gft_instance = await GftContract.deployed();\n      const gft_contract_owner = await gft_instance.owner();\n      const is_paused = (await gft_instance.paused())\n      await this.setState({web3: web3, is_paused: is_paused, decimals: decimals, gft_contract_owner: gft_contract_owner, current_network: network_name, current_account: current_account, accounts: accounts, stbl_contract: stbl_instance, gft_contract: gft_instance}, this.setEventMonitors);\n      await this.updateState();\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.log(error);\n    }\n  };\n\n  changeAccount = async (accounts) => {\n    const {web3}  = this.state;\n    console.log(\"Account change detected :\" + accounts);\n    const new_account = await web3.utils.toChecksumAddress(window.ethereum.selectedAddress);\n    this.setState({current_account: new_account});\n    this.updateState();\n  };\n\n  changeNetwork = async (accounts) => {\n    console.log(\"Network change detected :\" + accounts);\n    const id = await window.ethereum.networkVersion ;\n    const network = {'1': 'Main Net', '2': 'Morden', '3': 'Ropsten', '4': 'Rinkeby', '42': 'Kovan'}\n    let new_net;\n    if (network[id] !== undefined) {\n      new_net = network[id];\n    } else {\n      new_net = \"Custom network, id: \" + id;\n    }\n    const {stbl_contract} = this.state;\n    const new_decimals = (await stbl_contract.decimals());\n    this.setState({decimals: new_decimals, current_network: new_net});\n    this.updateState();\n  };\n\n  setEventMonitors = async () => {\n    window.ethereum.on('accountsChanged', this.changeAccount);\n    window.ethereum.on('networkChanged', this.changeNetwork);\n  };\n\n  updateState = async () =>{\n    const { is_paused, is_shop, decimals, web3, stbl_total_supply, stble_my_supply, gft_stbl_balance, gft_total_supply, gft_my_supply, gft_contract_owner, current_account, stbl_contract, gft_contract}  = this.state;\n    var BN = web3.utils.BN;\n    const d = new BN(10).pow(new BN(decimals));\n    const new_stbl_total_supply = ((await stbl_contract.totalSupply()).div(d)).toNumber();\n    const new_stble_my_supply =   ((await stbl_contract.balanceOf(current_account)).div(d)).toNumber();\n    const new_gft_total_supply =  (await gft_contract.totalSupply()).toNumber();\n    const new_gft_my_supply =     (await gft_contract.balanceOf(current_account)).toNumber();\n    const new_gft_stbl_balance =  ((await stbl_contract.balanceOf(gft_contract.address)).div(d)).toNumber();\n    const new_is_paused = (await gft_contract.paused())\n    var new_is_shop;\n    //owner automaticallly has the ShopRole but should not be seen as a shop\n    if (gft_contract_owner !== current_account) {\n       new_is_shop = await gft_contract.isShop(current_account);\n    } else {\n      new_is_shop = false;\n    }\n\n    //only update if there is a state change\n    if (new_stbl_total_supply !== stbl_total_supply || new_stble_my_supply !== stble_my_supply || new_gft_total_supply !== gft_total_supply || new_gft_my_supply !== gft_my_supply || new_gft_stbl_balance !== gft_stbl_balance || new_is_shop !==is_shop  ||is_paused !== new_is_paused) {\n      this.setState({is_paused: new_is_paused, is_shop: new_is_shop, stbl_total_supply: new_stbl_total_supply, stble_my_supply: new_stble_my_supply, gft_stbl_balance: new_gft_stbl_balance, gft_total_supply: new_gft_total_supply, gft_my_supply: new_gft_my_supply});\n    }\n  }\n\n  get_stbl = async (event) =>{\n    event.preventDefault();\n    if (this.refs.stbl_amount.value !== '') {\n      const {web3, decimals, current_account, stbl_contract}  = this.state;\n      var BN = web3.utils.BN;\n      const d = new BN(10).pow(new BN(decimals));\n      const n =  new BN(this.refs.stbl_amount.value).mul(d);\n      await stbl_contract.mint(current_account, n, { from: current_account });\n      this.updateState();\n    } else {\n      alert('Please specify an amount of STBL tokens you want to receive.')\n    }\n  }\n\n  fund_gft = async (event) =>{\n    event.preventDefault();\n    if (this.refs.fund_amount.value !== '') {\n      //const { stbl_total_supply,stble_my_supply, gft_total_supply, gft_my_supply, current_account, stbl_contract, gft_contract}  = this.state;\n      const {web3, decimals, current_account, stbl_contract, gft_contract}  = this.state;\n      var BN = web3.utils.BN;\n      const d = new BN(10).pow(new BN(decimals));\n      const n =  new BN(this.refs.fund_amount.value).mul(d);\n      await stbl_contract.approve(gft_contract.address, n, { from: current_account });\n      console.log('fund_gft: ');\n      const tx = await gft_contract.fund(n, { from: current_account });\n      console.log(tx);\n      this.updateState();\n    } else {\n      alert('Please specify an amount of STBL tokens to fund the GFT contract with.')\n    }\n  }\n\n  refund_gft = async (event) =>{\n    event.preventDefault();\n      const {current_account, gft_contract}  = this.state;\n      console.log('refund_gft: ');\n      const tx = await gft_contract.refund({from: current_account});\n      console.log(tx);\n      this.updateState();\n  }\n\n  get_gft = async (event) =>{\n    event.preventDefault();\n    if (this.refs.gft_stbl_amount.value !== '') {\n      //const { stbl_total_supply,stble_my_supply, gft_total_supply, gft_my_supply, current_account, stbl_contract, gft_contract}  = this.state;\n      const { web3, decimals, current_account, stbl_contract, gft_contract}  = this.state;\n      var BN = web3.utils.BN;\n      const d = new BN(10).pow(new BN(decimals));\n      const n =  new BN(this.refs.gft_stbl_amount.value).mul(d);\n      await stbl_contract.approve(gft_contract.address, n, { from: current_account });\n      console.log('get_gft: ');\n      const tx = await gft_contract.issue(n, { from: current_account });\n      console.log(tx);\n      this.updateState();\n    } else {\n    alert('Please specify an amount of STBL tokens to buy the GFT (10% will be added by the owner/promotor).')\n    }\n  }\n\n  send_gft = async (event) =>{\n    event.preventDefault();\n    if (this.refs.shop_address.value !== '') {\n      let tx;\n      const {web3, current_account, gft_contract}  = this.state;\n      //const count = await gft_contract.balanceOf(current_account);\n      let ID = await gft_contract.tokenByIndex(0);\n      ID = await gft_contract.tokenOfOwnerByIndex(current_account, 0);\n      //const approved = await gft_contract.getApproved(ID);\n      //alert('Approved: ' + approved + ' Current Account addess: ' + current_account.address) ;\n      //web3.utils.toChecksumAddress(\n      console.log('approve: ');\n      tx = await gft_contract.approve(web3.utils.toChecksumAddress(this.refs.shop_address.value), ID, { from: current_account });\n      console.log(tx);\n      console.log('safeTransferFrom: ');\n      tx = await gft_contract.safeTransferFrom(current_account, web3.utils.toChecksumAddress(this.refs.shop_address.value), ID, { from: current_account });\n      console.log(tx);\n      this.updateState();\n    } else {\n    alert('Please specify an amount of STBL tokens to buy the GFT (10% will be added by the owner/promotor).')\n    }\n  }\n\n  redeem_gft = async (event) =>{\n    event.preventDefault();\n    let tx;\n    const {is_paused, current_account, gft_contract}  = this.state;\n    const count = await gft_contract.balanceOf(current_account);\n    if (count>0){\n      const ID = await gft_contract.tokenOfOwnerByIndex(current_account, 0);\n      //const approved = await gft_contract.getApproved(ID);\n      //alert('Approved: ' + approved + ' Current Account addess: ' + current_account.address) ;\n      //web3.utils.toChecksumAddress(\n      if (is_paused){\n        console.log('redeemPaused: ');\n        tx = await gft_contract.redeemPaused( ID, { from: current_account });\n      } else {\n        console.log('redeem: ');\n        tx = await gft_contract.redeem( ID, { from: current_account });\n      }\n      console.log(tx);\n      this.updateState();\n    } else {\n      alert(\"Sorry, you don't have any GFT\")\n    }\n  }\n\n  pause = async (event) =>{\n    event.preventDefault();\n    const {current_account, gft_contract}  = this.state;\n    console.log('pause: ')\n    const tx = await gft_contract.pause({from: current_account});\n    console.log(tx);\n    this.updateState();\n  }\n\n  add_shop = async (event) =>{\n    if (this.refs.shop_address_add.value !== '') {\n      event.preventDefault();\n      const {current_account, gft_contract}  = this.state;\n      console.log('add_shop: ')\n      const tx = await gft_contract.addShop(this.refs.shop_address_add.value, {from: current_account});\n      console.log(tx);\n      this.updateState();\n    } else {\n\n    }\n  }\n\n  renounce_shop = async (event) =>{\n    event.preventDefault();\n    const {current_account, gft_contract}  = this.state;\n    console.log('renounce_shop: ');\n    const tx = await gft_contract.renounceShop({from: current_account});\n    console.log(tx);\n    this.updateState();\n  }\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    if (this.state.gft_contract_owner === this.state.current_account) {\n      return (\n        <div className=\"App\">\n          <h1>Owner</h1>\n          { this.state.is_paused && <div> <h2>GFT contract is PAUSED.</h2> When all GFT tokens are redeemed you can withdraw the remaining STBL tokens<br/><br/></div> }\n          <h2>Manage GiftCertificate contract.</h2>\n          <div>Network: {this.state.current_network}</div>\n          <div>GFT contract owner: {this.state.gft_contract_owner}</div>\n          <div>Your Account: {this.state.current_account}</div>\n          <div>Total supply of STBL tokens: {this.state.stbl_total_supply}</div>\n          <div>Your supply of STBL tokens: {this.state.stble_my_supply}</div>\n          <div>Total supply of GFT tokens: {this.state.gft_total_supply}</div>\n          <div>Your supply of GFT tokens: {this.state.gft_my_supply}</div>\n          <div>GFT contract's STBL balance (ie. funds): {this.state.gft_stbl_balance}</div>\n          <p></p>\n          <div><form onSubmit={this.get_stbl}>\n            <label>Get STBL tokens (they're free, only for this demo). Amount:\n              <input type=\"text\" name=\"stbl_amount\" ref=\"stbl_amount\"/>\n            </label>\n             <input type=\"submit\" value=\"Receive\" />\n          </form></div>\n          <p></p>\n          <div><form onSubmit={this.fund_gft}>\n            <label>Fund the GFT contract. Amount:\n              <input type=\"text\" name=\"stbl_amount\" ref=\"fund_amount\"/>\n            </label>\n             <input type=\"submit\" value=\"Fund\" />\n          </form>\n          <p></p>\n          <div><form onSubmit={this.pause}>\n            <label>Pause the GFT contract (kill switch)\n            </label>\n             <input type=\"submit\" value=\"Pause\" />\n          </form></div>\n          </div>\n          <p></p>\n          <div><form onSubmit={this.add_shop}>\n              <label>Add shop with address\n                <input type=\"text\" name=\"shop_address_add\" ref=\"shop_address_add\"/>\n              </label>\n              <input type=\"submit\" value=\"Add\" />\n             </form>\n             <p></p>\n          </div>\n          { (this.state.is_paused && (this.state.gft_total_supply === 0)) &&\n            <div>\n              <form onSubmit={this.refund_gft}>\n                <label>Refund the remaining STBL tokens from the GFT contract</label>\n                <input type=\"submit\" value=\"Refund\" />\n              </form>\n            </div> }\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>User</h1>\n        { this.state.is_paused && <div> <h2>GFT contract is PAUSED.</h2> When all GFT tokens are redeemed you can withdraw the remaining STBL tokens<br/><br/></div> }\n        <h2>GiftCertificate contract state</h2>\n        <div>Network: {this.state.current_network}</div>\n        <div>GFT contract owner: {this.state.gft_contract_owner}</div>\n        <div>GFT contract paused: {this.state.is_paused}</div>\n        <div>Your Account: {this.state.current_account}</div>\n        <div>Total supply of STBL tokens: {this.state.stbl_total_supply}</div>\n        <div>Your supply of STBL tokens: {this.state.stble_my_supply}</div>\n        <div>Total supply of GFT tokens: {this.state.gft_total_supply}</div>\n        <div>Your supply of GFT tokens: {this.state.gft_my_supply}</div>\n        <div>GFT contract's STBL balance (ie. funds): {this.state.gft_stbl_balance}</div>\n        <p></p><div><form onSubmit={this.get_stbl}>\n          <label>Get STBL tokens (they're free, only for this demo).\n          Amount:\n            <input type=\"text\" name=\"stbl_amount\" ref=\"stbl_amount\"/>\n          </label>\n           <input type=\"submit\" value=\"Receive\" />\n        </form></div>\n        <p></p>\n        <div><form onSubmit={this.get_gft}>\n          <label>Buy a GFT with STBL. Amount (10% will be added by the owner/promotor):\n            <input type=\"text\" name=\"gft_stbl_amount\" ref=\"gft_stbl_amount\"/>\n          </label>\n           <input type=\"submit\" value=\"Buy\" />\n        </form></div>\n        <p></p>\n        <div>\n          <form onSubmit={this.send_gft}>\n            <label>Send (first) GFT to :\n              <input type=\"text\" name=\"shop_address\" ref=\"shop_address\"/>\n            </label>\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n          <p></p>\n        </div>\n\n        { ((this.state.is_paused ||this.state.is_shop) && (this.state.gft_my_supply > 0)) &&\n          <div>\n            <form onSubmit={this.redeem_gft}>\n              <label>redeem (first) GFT</label>\n              <input type=\"submit\" value=\"Redeem\" />\n            </form>\n            <p></p>\n          </div> }\n        { this.state.is_shop &&\n          <div><form onSubmit={this.renounce_shop}>\n            <label>Renounce your ability to redeem as a shop\n            </label>\n            <input type=\"submit\" value=\"Renounce\" />\n          </form></div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}